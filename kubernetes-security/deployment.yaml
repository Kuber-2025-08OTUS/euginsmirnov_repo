apiVersion: apps/v1
kind: Deployment
metadata:
  name: homework-deployment
  namespace: homework
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: homework
  template:
    metadata:
      labels:
        app: homework
    spec:
      # важно: поды запускаются под SA с доступом к /metrics
      serviceAccountName: monitoring
      # если используешь селектор — не забудь пролейблить ноду
      nodeSelector:
        homework: "true"

      volumes:
        - name: shared
          persistentVolumeClaim:
            claimName: homework-pvc
        - name: conf
          configMap:
            name: homework-conf

      initContainers:
        # 1) тянем /metrics и сохраняем в metrics.html на PVC
        - name: fetch-metrics
          image: curlimages/curl:8.10.1
          command:
            - sh
            - -c
            - |
              set -eu
              URL="https://kubernetes.default.svc/metrics"
              TOKEN="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)"
              # сохраним прямо в том, который станет /homework у приложения
              mkdir -p /init
              curl -sS --fail \
                --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
                -H "Authorization: Bearer ${TOKEN}" \
                "${URL}" > /init/metrics.html
                mkdir -p /init/metrics
                cp /init/metrics.html /init/metrics/index.html
          volumeMounts:
            - name: shared
              mountPath: /init
        # 2) как и раньше — кладём index.html
        - name: init-index
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              set -eu
              mkdir -p /init
              wget -q -O /init/index.html http://otus.ru
          volumeMounts:
            - name: shared
              mountPath: /init

      containers:
        - name: web
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              # простой http-сервер, корень каталога /homework
              httpd -f -p 8000 -h /homework
          ports:
            - name: http
              containerPort: 8000
          volumeMounts:
            - name: shared
              mountPath: /homework
            - name: conf
              mountPath: /homework/conf
              readOnly: true
          readinessProbe:
            httpGet:
              path: /index.html
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          lifecycle:
            preStop:
              exec:
                command: ["sh","-c","rm -f /homework/index.html"]
